<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE schema [
    <!ENTITY white '\p{Z}' >

    <!ENTITY collapse_whitespace '
    <filter class="solr.PatternReplaceFilterFactory" pattern="&white;" replacement=" "
    replace="all"/>
    '>

    <!ENTITY trim_leading_and_trailing_whitespace '
    <filter class="solr.TrimFilterFactory"/>
    '>

    <!ENTITY cleanup_whitespace '
    &trim_leading_and_trailing_whitespace;
    &collapse_whitespace;
    '>

    <!ENTITY remove_unnecessary_ending_punctuation '
    <filter class="solr.PatternReplaceFilterFactory" pattern="[.;,]+$" replacement=""
    replace="all"/>
    '>

    <!ENTITY pre_tokenization_case_folding '
    <charFilter class="solr.ICUNormalizer2CharFilterFactory"/>
    '>

    <!ENTITY icu_case_folding_and_normalization '
    <filter class="solr.ICUFoldingFilterFactory"/>
    '>

    <!-- Tokenizing -->
    <!ENTITY tokenize_with_icu '
    <tokenizer class="solr.ICUTokenizerFactory"/>
    '>

    <!ENTITY tokenize_into_one_big_token '
    <tokenizer class="solr.KeywordTokenizerFactory"/>
    '>
]>

<schema name="minimal-config" version="1.6">

<!--  <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false"/> -->
  <field name="id" type="browse_match" indexed="true" stored="true" required="true" multiValued="false"/>
  <field name="_version_" type="long" indexed="true" stored="true"/>
  <field name="see_instead" type="string" stored="true" indexed="false" multiValued="true"/>

  <field name="record_type" type="string" stored="true" indexed="true" multiValued="false" docValues="true"/>
  <field name="browse_field" type="string" stored="true" indexed="true" multiValued="false" docValues="true"/>

  <field name="term" type="browse_match" indexed="true" stored="true" multiValued="false"/>
  <field name="alternate_forms" type="string" stored="true" indexed="false" multiValued="true"/>

  <field name="count" type="int" stored="true" indexed="true" multiValued="false"/>

  <field name="see_also" type="browse_match" indexed="true" stored="true" multiValued="true"/>
  <field name="incoming_see_also" type="browse_match" indexed="true" stored="true" multiValued="true"/>
  <field name="broader" type="browse_match" indexed="true" stored="true" multiValued="true"/>
  <field name="narrower" type="browse_match" indexed="true" stored="true" multiValued="true"/>

  <field name="json" type="string" indexed="false" stored="true" multiValued="false"/>


  <uniqueKey>id</uniqueKey>


  <!-- Primitive Field Types -->
  <fieldType name="binary"  class="solr.BinaryField"/>
  <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>

  <fieldType name="date"    class="solr.DatePointField" />

  <fieldType name="double"  class="solr.DoublePointField"/>
  <fieldType name="float"   class="solr.FloatPointField"/>
  <fieldType name="int"     class="solr.IntPointField"/>
  <!-- docValues are enabled by default for long type so we don't need to index the version field  -->
  <fieldType name="long"    class="solr.LongPointField"/>

  <fieldType name="string"  class="solr.StrField"/>

  <!-- Ignored, for making data disappear -->
  <fieldType name="ignored" class="solr.StrField" stored="false" indexed="false" multiValued="true"/>


  <!-- for comparing and sorting NAF entries the best we can

  * Tokenize into one big token
  * case fold and normalize NKFC
  * Remove any leading spaces
  * Remove any trailing punctuation and spaces

  TODO: Need to change numbers so they're sortable. Should be a java filter
  -->

  <!-- Normalize spaces, and then take all meaningless punctuation off the end.
       The ICUFoldingFilter takes care of case-sensitivity, diacritics, etc.
       For subjects, we change 'x––y' into 'x –– y' for readability and to recognize
       that there are, in fact, different words under there.
  -->

  <fieldType name="browse_match" class="solr.TextField" positionIncrementGap="&pig;">
  <analyzer>
    &tokenize_into_one_big_token;
    &cleanup_whitespace;
    &remove_unnecessary_ending_punctuation;
    &icu_case_folding_and_normalization;
    <filter class="solr.PatternReplaceFilterFactory" pattern="([^\s])\s*--\s*" replacement="$1 -- " replace="all"/>
  </analyzer>
  </fieldType>

</schema>
